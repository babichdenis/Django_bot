# handlers/telegram_handlers.py
from aiogram import Bot, types
from aiogram.filters import Command, Filter
from aiogram.utils.keyboard import InlineKeyboardBuilder
from database.db import database
from utils.logger import logger
from decouple import config
from datetime import datetime
from database.queries import create_telegram_user

WEBAPP_URL = config("WEBAPP_URL")
CHANNEL_USERNAME = config("CHANNEL_USERNAME")


class IsSubscribed(Filter):
    async def __call__(self, bot: Bot, message: types.Message) -> bool:
        return await check_subscription(bot, message.from_user.id)

async def check_subscription(bot: Bot, user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª."""
    try:
        chat_member = await bot.get_chat_member(CHANNEL_USERNAME, user_id)
        return chat_member.status not in ["left", "kicked", "restricted", "banned"]
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: {e}", exc_info=True)
        return False

async def send_welcome(message: types.Message, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    try:
        user = message.from_user

        if not await check_subscription(bot, user.id):
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª
            builder = InlineKeyboardBuilder()
            builder.row(types.InlineKeyboardButton(
                text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª",
                url=f"https://t.me/{CHANNEL_USERNAME[1:]}"
            ))
            builder.row(types.InlineKeyboardButton(
                text="–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è!",
                callback_data="check_subscription" 
            ))

            await message.answer(
                "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:",
                reply_markup=builder.as_markup()
            )
            return

        now = datetime.now()

        await create_telegram_user(user.id, user.username, user.first_name, user.last_name, now, now, True)
        web_app_url = WEBAPP_URL
        builder = InlineKeyboardBuilder()
        builder.row(
            types.InlineKeyboardButton(
                text="–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω üõç",
                web_app=types.WebAppInfo(url=web_app_url)
            )
        )

        await message.answer(
            f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, "
            "—á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏:",
            reply_markup=builder.as_markup()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_welcome: {e}", exc_info=True)
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏
async def check_subscription_callback(callback: types.CallbackQuery, bot: Bot):
    user_id = callback.from_user.id
    if await check_subscription(bot, user_id):
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–ª—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–∞–≥–∞–∑–∏–Ω
        await callback.message.edit_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å...", reply_markup=None) # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏
        web_app_url = WEBAPP_URL
        builder = InlineKeyboardBuilder()
        builder.row(
            types.InlineKeyboardButton(
                text="–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω üõç",
                web_app=types.WebAppInfo(url=web_app_url)
            )
        )
        await callback.message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=builder.as_markup()) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω"

    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
        await callback.answer("–í—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", show_alert=True)

def register_telegram_handlers(dp):
    dp.message.register(send_welcome, Command("start"))
    dp.message.register(show_help, Command("help"))
    dp.callback_query.register(check_subscription_callback, lambda c: c.data == "check_subscription")

async def show_help(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    help_text = (
        "üõç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
    )
    await message.answer(help_text)
