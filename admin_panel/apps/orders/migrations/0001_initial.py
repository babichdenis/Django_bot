# Generated by Django 5.1.6 on 2025-03-05 23:40

import apps.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_active', models.BooleanField(default=True, help_text='Для мягкого удаления', verbose_name='Активен')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('processing', 'В обработке'), ('shipped', 'Отправлен'), ('delivered', 'Доставлен'), ('canceled', 'Отменен')], default='new', max_length=20, verbose_name='Статус')),
                ('payment_status', models.CharField(choices=[('pending', 'Ожидает оплаты'), ('paid', 'Оплачено'), ('partially_paid', 'Частично оплачено'), ('refunded', 'Возвращено'), ('failed', 'Ошибка оплаты')], default='pending', max_length=20, verbose_name='Статус оплаты')),
                ('total', models.DecimalField(decimal_places=2, max_digits=12, validators=[apps.core.validators.validate_positive_decimal], verbose_name='Сумма заказа')),
                ('delivery_method', models.CharField(choices=[('standard', 'Стандартная'), ('express', 'Экспресс')], default='standard', max_length=20, verbose_name='Способ доставки')),
                ('delivery_cost', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[apps.core.validators.validate_positive_decimal], verbose_name='Стоимость доставки')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[apps.core.validators.validate_positive_decimal], verbose_name='Скидка (%)')),
                ('promo_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Промокод')),
                ('expected_delivery_date', models.DateField(blank=True, null=True, verbose_name='Ожидаемая дата доставки')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.deliveryaddress', verbose_name='Адрес доставки')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='core.telegramuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-created_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_active', models.BooleanField(default=True, help_text='Для мягкого удаления', verbose_name='Активен')),
                ('quantity', models.PositiveIntegerField(validators=[apps.core.validators.validate_positive_integer], verbose_name='Количество')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[apps.core.validators.validate_positive_decimal], verbose_name='Цена за единицу')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[apps.core.validators.validate_positive_decimal], verbose_name='Скидка на товар (%)')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Элемент заказа',
                'verbose_name_plural': 'Элементы заказа',
                'ordering': ['-created_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_active', models.BooleanField(default=True, help_text='Для мягкого удаления', verbose_name='Активен')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('processing', 'В обработке'), ('shipped', 'Отправлен'), ('delivered', 'Доставлен'), ('canceled', 'Отменен')], max_length=20, verbose_name='Статус')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='orders.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'История статуса заказа',
                'verbose_name_plural': 'Истории статусов заказов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user', 'status'], name='orders_orde_user_id_02a211_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['created_at', 'status'], name='orders_orde_created_49d91d_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['expected_delivery_date'], name='orders_orde_expecte_d41167_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='orderitem',
            unique_together={('order', 'product')},
        ),
    ]
